#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AndevisTest.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AndevisTestTask")]
	public partial class EntitiesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKeeled(Keeled instance);
    partial void UpdateKeeled(Keeled instance);
    partial void DeleteKeeled(Keeled instance);
    partial void InsertKeeleTasud(KeeleTasud instance);
    partial void UpdateKeeleTasud(KeeleTasud instance);
    partial void DeleteKeeleTasud(KeeleTasud instance);
    partial void InsertPersonal(Personal instance);
    partial void UpdatePersonal(Personal instance);
    partial void DeletePersonal(Personal instance);
    partial void InsertPersonalKeeled(PersonalKeeled instance);
    partial void UpdatePersonalKeeled(PersonalKeeled instance);
    partial void DeletePersonalKeeled(PersonalKeeled instance);
    partial void InsertSugu(Sugu instance);
    partial void UpdateSugu(Sugu instance);
    partial void DeleteSugu(Sugu instance);
    partial void InsertTase(Tase instance);
    partial void UpdateTase(Tase instance);
    partial void DeleteTase(Tase instance);
    partial void InsertTimeUnit(TimeUnit instance);
    partial void UpdateTimeUnit(TimeUnit instance);
    partial void DeleteTimeUnit(TimeUnit instance);
    partial void InsertTooaeg(Tooaeg instance);
    partial void UpdateTooaeg(Tooaeg instance);
    partial void DeleteTooaeg(Tooaeg instance);
    #endregion
		
		public EntitiesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntitiesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntitiesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EntitiesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Keeled> Keeleds
		{
			get
			{
				return this.GetTable<Keeled>();
			}
		}
		
		public System.Data.Linq.Table<KeeleTasud> KeeleTasuds
		{
			get
			{
				return this.GetTable<KeeleTasud>();
			}
		}
		
		public System.Data.Linq.Table<Personal> Personals
		{
			get
			{
				return this.GetTable<Personal>();
			}
		}
		
		public System.Data.Linq.Table<PersonalKeeled> PersonalKeeleds
		{
			get
			{
				return this.GetTable<PersonalKeeled>();
			}
		}
		
		public System.Data.Linq.Table<Sugu> Sugus
		{
			get
			{
				return this.GetTable<Sugu>();
			}
		}
		
		public System.Data.Linq.Table<Tase> Tases
		{
			get
			{
				return this.GetTable<Tase>();
			}
		}
		
		public System.Data.Linq.Table<TimeUnit> TimeUnits
		{
			get
			{
				return this.GetTable<TimeUnit>();
			}
		}
		
		public System.Data.Linq.Table<Tooaeg> Tooaegs
		{
			get
			{
				return this.GetTable<Tooaeg>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Employee.GetEmployeesInfo")]
		public ISingleResult<GetEmployeesInfoResult> GetEmployeesInfo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Keel", DbType="NVarChar(100)")] string keel, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tase", DbType="NVarChar(50)")] string tase, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VanusAlates", DbType="Int")] System.Nullable<int> vanusAlates, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VanusKuni", DbType="Int")] System.Nullable<int> vanusKuni, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sugu", DbType="NVarChar(50)")] string sugu)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), keel, tase, vanusAlates, vanusKuni, sugu);
			return ((ISingleResult<GetEmployeesInfoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Employee.GetSalariesInfo")]
		public ISingleResult<GetSalariesInfoResult> GetSalariesInfo([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Kuu", DbType="Int")] System.Nullable<int> kuu, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Aasta", DbType="Int")] System.Nullable<int> aasta, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idPersonal)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), kuu, aasta, idPersonal);
			return ((ISingleResult<GetSalariesInfoResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Employee.Keeled")]
	public partial class Keeled : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Keel;
		
		private EntitySet<PersonalKeeled> _PersonalKeeleds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKeelChanging(string value);
    partial void OnKeelChanged();
    #endregion
		
		public Keeled()
		{
			this._PersonalKeeleds = new EntitySet<PersonalKeeled>(new Action<PersonalKeeled>(this.attach_PersonalKeeleds), new Action<PersonalKeeled>(this.detach_PersonalKeeleds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keel", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Keel
		{
			get
			{
				return this._Keel;
			}
			set
			{
				if ((this._Keel != value))
				{
					this.OnKeelChanging(value);
					this.SendPropertyChanging();
					this._Keel = value;
					this.SendPropertyChanged("Keel");
					this.OnKeelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Keeled_PersonalKeeled", Storage="_PersonalKeeleds", ThisKey="Id", OtherKey="idKeeled")]
		public EntitySet<PersonalKeeled> PersonalKeeleds
		{
			get
			{
				return this._PersonalKeeleds;
			}
			set
			{
				this._PersonalKeeleds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonalKeeleds(PersonalKeeled entity)
		{
			this.SendPropertyChanging();
			entity.Keeled = this;
		}
		
		private void detach_PersonalKeeleds(PersonalKeeled entity)
		{
			this.SendPropertyChanging();
			entity.Keeled = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Employee.KeeleTasud")]
	public partial class KeeleTasud : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _idTase;
		
		private decimal _Summa;
		
		private EntityRef<Tase> _Tase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidTaseChanging(int value);
    partial void OnidTaseChanged();
    partial void OnSummaChanging(decimal value);
    partial void OnSummaChanged();
    #endregion
		
		public KeeleTasud()
		{
			this._Tase = default(EntityRef<Tase>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTase", DbType="Int NOT NULL")]
		public int idTase
		{
			get
			{
				return this._idTase;
			}
			set
			{
				if ((this._idTase != value))
				{
					if (this._Tase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTaseChanging(value);
					this.SendPropertyChanging();
					this._idTase = value;
					this.SendPropertyChanged("idTase");
					this.OnidTaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summa", DbType="Decimal(18,2) NOT NULL")]
		public decimal Summa
		{
			get
			{
				return this._Summa;
			}
			set
			{
				if ((this._Summa != value))
				{
					this.OnSummaChanging(value);
					this.SendPropertyChanging();
					this._Summa = value;
					this.SendPropertyChanged("Summa");
					this.OnSummaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tase_KeeleTasud", Storage="_Tase", ThisKey="idTase", OtherKey="Id", IsForeignKey=true)]
		public Tase Tase
		{
			get
			{
				return this._Tase.Entity;
			}
			set
			{
				Tase previousValue = this._Tase.Entity;
				if (((previousValue != value) 
							|| (this._Tase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tase.Entity = null;
						previousValue.KeeleTasuds.Remove(this);
					}
					this._Tase.Entity = value;
					if ((value != null))
					{
						value.KeeleTasuds.Add(this);
						this._idTase = value.Id;
					}
					else
					{
						this._idTase = default(int);
					}
					this.SendPropertyChanged("Tase");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Employee.Personal")]
	public partial class Personal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Perekonnanimi;
		
		private string _Eesnimi;
		
		private int _idSugu;
		
		private System.DateTime _Sunnipaev;
		
		private decimal _Palk;
		
		private int _idTimeUnit;
		
		private EntitySet<PersonalKeeled> _PersonalKeeleds;
		
		private EntitySet<Tooaeg> _Tooaegs;
		
		private EntityRef<Sugu> _Sugu;
		
		private EntityRef<TimeUnit> _TimeUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPerekonnanimiChanging(string value);
    partial void OnPerekonnanimiChanged();
    partial void OnEesnimiChanging(string value);
    partial void OnEesnimiChanged();
    partial void OnidSuguChanging(int value);
    partial void OnidSuguChanged();
    partial void OnSunnipaevChanging(System.DateTime value);
    partial void OnSunnipaevChanged();
    partial void OnPalkChanging(decimal value);
    partial void OnPalkChanged();
    partial void OnidTimeUnitChanging(int value);
    partial void OnidTimeUnitChanged();
    #endregion
		
		public Personal()
		{
			this._PersonalKeeleds = new EntitySet<PersonalKeeled>(new Action<PersonalKeeled>(this.attach_PersonalKeeleds), new Action<PersonalKeeled>(this.detach_PersonalKeeleds));
			this._Tooaegs = new EntitySet<Tooaeg>(new Action<Tooaeg>(this.attach_Tooaegs), new Action<Tooaeg>(this.detach_Tooaegs));
			this._Sugu = default(EntityRef<Sugu>);
			this._TimeUnit = default(EntityRef<TimeUnit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Perekonnanimi", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Perekonnanimi
		{
			get
			{
				return this._Perekonnanimi;
			}
			set
			{
				if ((this._Perekonnanimi != value))
				{
					this.OnPerekonnanimiChanging(value);
					this.SendPropertyChanging();
					this._Perekonnanimi = value;
					this.SendPropertyChanged("Perekonnanimi");
					this.OnPerekonnanimiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eesnimi", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Eesnimi
		{
			get
			{
				return this._Eesnimi;
			}
			set
			{
				if ((this._Eesnimi != value))
				{
					this.OnEesnimiChanging(value);
					this.SendPropertyChanging();
					this._Eesnimi = value;
					this.SendPropertyChanged("Eesnimi");
					this.OnEesnimiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSugu", DbType="Int NOT NULL")]
		public int idSugu
		{
			get
			{
				return this._idSugu;
			}
			set
			{
				if ((this._idSugu != value))
				{
					if (this._Sugu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSuguChanging(value);
					this.SendPropertyChanging();
					this._idSugu = value;
					this.SendPropertyChanged("idSugu");
					this.OnidSuguChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sunnipaev", DbType="Date NOT NULL")]
		public System.DateTime Sunnipaev
		{
			get
			{
				return this._Sunnipaev;
			}
			set
			{
				if ((this._Sunnipaev != value))
				{
					this.OnSunnipaevChanging(value);
					this.SendPropertyChanging();
					this._Sunnipaev = value;
					this.SendPropertyChanged("Sunnipaev");
					this.OnSunnipaevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Palk", DbType="Decimal(18,2) NOT NULL")]
		public decimal Palk
		{
			get
			{
				return this._Palk;
			}
			set
			{
				if ((this._Palk != value))
				{
					this.OnPalkChanging(value);
					this.SendPropertyChanging();
					this._Palk = value;
					this.SendPropertyChanged("Palk");
					this.OnPalkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTimeUnit", DbType="Int NOT NULL")]
		public int idTimeUnit
		{
			get
			{
				return this._idTimeUnit;
			}
			set
			{
				if ((this._idTimeUnit != value))
				{
					if (this._TimeUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTimeUnitChanging(value);
					this.SendPropertyChanging();
					this._idTimeUnit = value;
					this.SendPropertyChanged("idTimeUnit");
					this.OnidTimeUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personal_PersonalKeeled", Storage="_PersonalKeeleds", ThisKey="Id", OtherKey="idPersonal")]
		public EntitySet<PersonalKeeled> PersonalKeeleds
		{
			get
			{
				return this._PersonalKeeleds;
			}
			set
			{
				this._PersonalKeeleds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personal_Tooaeg", Storage="_Tooaegs", ThisKey="Id", OtherKey="idPersonal")]
		public EntitySet<Tooaeg> Tooaegs
		{
			get
			{
				return this._Tooaegs;
			}
			set
			{
				this._Tooaegs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sugu_Personal", Storage="_Sugu", ThisKey="idSugu", OtherKey="Id", IsForeignKey=true)]
		public Sugu Sugu
		{
			get
			{
				return this._Sugu.Entity;
			}
			set
			{
				Sugu previousValue = this._Sugu.Entity;
				if (((previousValue != value) 
							|| (this._Sugu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sugu.Entity = null;
						previousValue.Personals.Remove(this);
					}
					this._Sugu.Entity = value;
					if ((value != null))
					{
						value.Personals.Add(this);
						this._idSugu = value.Id;
					}
					else
					{
						this._idSugu = default(int);
					}
					this.SendPropertyChanged("Sugu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeUnit_Personal", Storage="_TimeUnit", ThisKey="idTimeUnit", OtherKey="Id", IsForeignKey=true)]
		public TimeUnit TimeUnit
		{
			get
			{
				return this._TimeUnit.Entity;
			}
			set
			{
				TimeUnit previousValue = this._TimeUnit.Entity;
				if (((previousValue != value) 
							|| (this._TimeUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TimeUnit.Entity = null;
						previousValue.Personals.Remove(this);
					}
					this._TimeUnit.Entity = value;
					if ((value != null))
					{
						value.Personals.Add(this);
						this._idTimeUnit = value.Id;
					}
					else
					{
						this._idTimeUnit = default(int);
					}
					this.SendPropertyChanged("TimeUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PersonalKeeleds(PersonalKeeled entity)
		{
			this.SendPropertyChanging();
			entity.Personal = this;
		}
		
		private void detach_PersonalKeeleds(PersonalKeeled entity)
		{
			this.SendPropertyChanging();
			entity.Personal = null;
		}
		
		private void attach_Tooaegs(Tooaeg entity)
		{
			this.SendPropertyChanging();
			entity.Personal = this;
		}
		
		private void detach_Tooaegs(Tooaeg entity)
		{
			this.SendPropertyChanging();
			entity.Personal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Employee.PersonalKeeled")]
	public partial class PersonalKeeled : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _idPersonal;
		
		private int _idKeeled;
		
		private int _idTase;
		
		private EntityRef<Keeled> _Keeled;
		
		private EntityRef<Personal> _Personal;
		
		private EntityRef<Tase> _Tase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidPersonalChanging(int value);
    partial void OnidPersonalChanged();
    partial void OnidKeeledChanging(int value);
    partial void OnidKeeledChanged();
    partial void OnidTaseChanging(int value);
    partial void OnidTaseChanged();
    #endregion
		
		public PersonalKeeled()
		{
			this._Keeled = default(EntityRef<Keeled>);
			this._Personal = default(EntityRef<Personal>);
			this._Tase = default(EntityRef<Tase>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPersonal", DbType="Int NOT NULL")]
		public int idPersonal
		{
			get
			{
				return this._idPersonal;
			}
			set
			{
				if ((this._idPersonal != value))
				{
					if (this._Personal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPersonalChanging(value);
					this.SendPropertyChanging();
					this._idPersonal = value;
					this.SendPropertyChanged("idPersonal");
					this.OnidPersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idKeeled", DbType="Int NOT NULL")]
		public int idKeeled
		{
			get
			{
				return this._idKeeled;
			}
			set
			{
				if ((this._idKeeled != value))
				{
					if (this._Keeled.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidKeeledChanging(value);
					this.SendPropertyChanging();
					this._idKeeled = value;
					this.SendPropertyChanged("idKeeled");
					this.OnidKeeledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTase", DbType="Int NOT NULL")]
		public int idTase
		{
			get
			{
				return this._idTase;
			}
			set
			{
				if ((this._idTase != value))
				{
					if (this._Tase.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTaseChanging(value);
					this.SendPropertyChanging();
					this._idTase = value;
					this.SendPropertyChanged("idTase");
					this.OnidTaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Keeled_PersonalKeeled", Storage="_Keeled", ThisKey="idKeeled", OtherKey="Id", IsForeignKey=true)]
		public Keeled Keeled
		{
			get
			{
				return this._Keeled.Entity;
			}
			set
			{
				Keeled previousValue = this._Keeled.Entity;
				if (((previousValue != value) 
							|| (this._Keeled.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Keeled.Entity = null;
						previousValue.PersonalKeeleds.Remove(this);
					}
					this._Keeled.Entity = value;
					if ((value != null))
					{
						value.PersonalKeeleds.Add(this);
						this._idKeeled = value.Id;
					}
					else
					{
						this._idKeeled = default(int);
					}
					this.SendPropertyChanged("Keeled");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personal_PersonalKeeled", Storage="_Personal", ThisKey="idPersonal", OtherKey="Id", IsForeignKey=true)]
		public Personal Personal
		{
			get
			{
				return this._Personal.Entity;
			}
			set
			{
				Personal previousValue = this._Personal.Entity;
				if (((previousValue != value) 
							|| (this._Personal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personal.Entity = null;
						previousValue.PersonalKeeleds.Remove(this);
					}
					this._Personal.Entity = value;
					if ((value != null))
					{
						value.PersonalKeeleds.Add(this);
						this._idPersonal = value.Id;
					}
					else
					{
						this._idPersonal = default(int);
					}
					this.SendPropertyChanged("Personal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tase_PersonalKeeled", Storage="_Tase", ThisKey="idTase", OtherKey="Id", IsForeignKey=true)]
		public Tase Tase
		{
			get
			{
				return this._Tase.Entity;
			}
			set
			{
				Tase previousValue = this._Tase.Entity;
				if (((previousValue != value) 
							|| (this._Tase.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tase.Entity = null;
						previousValue.PersonalKeeleds.Remove(this);
					}
					this._Tase.Entity = value;
					if ((value != null))
					{
						value.PersonalKeeleds.Add(this);
						this._idTase = value.Id;
					}
					else
					{
						this._idTase = default(int);
					}
					this.SendPropertyChanged("Tase");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Employee.Sugu")]
	public partial class Sugu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private EntitySet<Personal> _Personals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public Sugu()
		{
			this._Personals = new EntitySet<Personal>(new Action<Personal>(this.attach_Personals), new Action<Personal>(this.detach_Personals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sugu_Personal", Storage="_Personals", ThisKey="Id", OtherKey="idSugu")]
		public EntitySet<Personal> Personals
		{
			get
			{
				return this._Personals;
			}
			set
			{
				this._Personals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Personals(Personal entity)
		{
			this.SendPropertyChanging();
			entity.Sugu = this;
		}
		
		private void detach_Personals(Personal entity)
		{
			this.SendPropertyChanging();
			entity.Sugu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Employee.Tase")]
	public partial class Tase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private EntitySet<KeeleTasud> _KeeleTasuds;
		
		private EntitySet<PersonalKeeled> _PersonalKeeleds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public Tase()
		{
			this._KeeleTasuds = new EntitySet<KeeleTasud>(new Action<KeeleTasud>(this.attach_KeeleTasuds), new Action<KeeleTasud>(this.detach_KeeleTasuds));
			this._PersonalKeeleds = new EntitySet<PersonalKeeled>(new Action<PersonalKeeled>(this.attach_PersonalKeeleds), new Action<PersonalKeeled>(this.detach_PersonalKeeleds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tase_KeeleTasud", Storage="_KeeleTasuds", ThisKey="Id", OtherKey="idTase")]
		public EntitySet<KeeleTasud> KeeleTasuds
		{
			get
			{
				return this._KeeleTasuds;
			}
			set
			{
				this._KeeleTasuds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tase_PersonalKeeled", Storage="_PersonalKeeleds", ThisKey="Id", OtherKey="idTase")]
		public EntitySet<PersonalKeeled> PersonalKeeleds
		{
			get
			{
				return this._PersonalKeeleds;
			}
			set
			{
				this._PersonalKeeleds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KeeleTasuds(KeeleTasud entity)
		{
			this.SendPropertyChanging();
			entity.Tase = this;
		}
		
		private void detach_KeeleTasuds(KeeleTasud entity)
		{
			this.SendPropertyChanging();
			entity.Tase = null;
		}
		
		private void attach_PersonalKeeleds(PersonalKeeled entity)
		{
			this.SendPropertyChanging();
			entity.Tase = this;
		}
		
		private void detach_PersonalKeeleds(PersonalKeeled entity)
		{
			this.SendPropertyChanging();
			entity.Tase = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Employee.TimeUnit")]
	public partial class TimeUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private EntitySet<Personal> _Personals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public TimeUnit()
		{
			this._Personals = new EntitySet<Personal>(new Action<Personal>(this.attach_Personals), new Action<Personal>(this.detach_Personals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeUnit_Personal", Storage="_Personals", ThisKey="Id", OtherKey="idTimeUnit")]
		public EntitySet<Personal> Personals
		{
			get
			{
				return this._Personals;
			}
			set
			{
				this._Personals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Personals(Personal entity)
		{
			this.SendPropertyChanging();
			entity.TimeUnit = this;
		}
		
		private void detach_Personals(Personal entity)
		{
			this.SendPropertyChanging();
			entity.TimeUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Employee.Tooaeg")]
	public partial class Tooaeg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _idPersonal;
		
		private System.DateTime _Kuupaev;
		
		private decimal _Tootunnid;
		
		private EntityRef<Personal> _Personal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnidPersonalChanging(int value);
    partial void OnidPersonalChanged();
    partial void OnKuupaevChanging(System.DateTime value);
    partial void OnKuupaevChanged();
    partial void OnTootunnidChanging(decimal value);
    partial void OnTootunnidChanged();
    #endregion
		
		public Tooaeg()
		{
			this._Personal = default(EntityRef<Personal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPersonal", DbType="Int NOT NULL")]
		public int idPersonal
		{
			get
			{
				return this._idPersonal;
			}
			set
			{
				if ((this._idPersonal != value))
				{
					if (this._Personal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPersonalChanging(value);
					this.SendPropertyChanging();
					this._idPersonal = value;
					this.SendPropertyChanged("idPersonal");
					this.OnidPersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kuupaev", DbType="Date NOT NULL")]
		public System.DateTime Kuupaev
		{
			get
			{
				return this._Kuupaev;
			}
			set
			{
				if ((this._Kuupaev != value))
				{
					this.OnKuupaevChanging(value);
					this.SendPropertyChanging();
					this._Kuupaev = value;
					this.SendPropertyChanged("Kuupaev");
					this.OnKuupaevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tootunnid", DbType="Decimal(5,2) NOT NULL")]
		public decimal Tootunnid
		{
			get
			{
				return this._Tootunnid;
			}
			set
			{
				if ((this._Tootunnid != value))
				{
					this.OnTootunnidChanging(value);
					this.SendPropertyChanging();
					this._Tootunnid = value;
					this.SendPropertyChanged("Tootunnid");
					this.OnTootunnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Personal_Tooaeg", Storage="_Personal", ThisKey="idPersonal", OtherKey="Id", IsForeignKey=true)]
		public Personal Personal
		{
			get
			{
				return this._Personal.Entity;
			}
			set
			{
				Personal previousValue = this._Personal.Entity;
				if (((previousValue != value) 
							|| (this._Personal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Personal.Entity = null;
						previousValue.Tooaegs.Remove(this);
					}
					this._Personal.Entity = value;
					if ((value != null))
					{
						value.Tooaegs.Add(this);
						this._idPersonal = value.Id;
					}
					else
					{
						this._idPersonal = default(int);
					}
					this.SendPropertyChanged("Personal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetEmployeesInfoResult
	{
		
		private string _FullName;
		
		private string _Sugu;
		
		private System.DateTime _Sunnipaev;
		
		private System.Nullable<int> _Vanus;
		
		private string _Keel;
		
		private string _Tase;
		
		private System.Nullable<decimal> _Summa;
		
		public GetEmployeesInfoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(513) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sugu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Sugu
		{
			get
			{
				return this._Sugu;
			}
			set
			{
				if ((this._Sugu != value))
				{
					this._Sugu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sunnipaev", DbType="Date NOT NULL")]
		public System.DateTime Sunnipaev
		{
			get
			{
				return this._Sunnipaev;
			}
			set
			{
				if ((this._Sunnipaev != value))
				{
					this._Sunnipaev = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vanus", DbType="Int")]
		public System.Nullable<int> Vanus
		{
			get
			{
				return this._Vanus;
			}
			set
			{
				if ((this._Vanus != value))
				{
					this._Vanus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keel", DbType="NVarChar(100)")]
		public string Keel
		{
			get
			{
				return this._Keel;
			}
			set
			{
				if ((this._Keel != value))
				{
					this._Keel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tase", DbType="NVarChar(50)")]
		public string Tase
		{
			get
			{
				return this._Tase;
			}
			set
			{
				if ((this._Tase != value))
				{
					this._Tase = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summa", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Summa
		{
			get
			{
				return this._Summa;
			}
			set
			{
				if ((this._Summa != value))
				{
					this._Summa = value;
				}
			}
		}
	}
	
	public partial class GetSalariesInfoResult
	{
		
		private int _Id;
		
		private string _FullName;
		
		private decimal _Palk;
		
		private System.Nullable<decimal> _Tootunnid;
		
		private System.Nullable<decimal> _CalculatedSalary;
		
		public GetSalariesInfoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(513) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Palk", DbType="Decimal(18,2) NOT NULL")]
		public decimal Palk
		{
			get
			{
				return this._Palk;
			}
			set
			{
				if ((this._Palk != value))
				{
					this._Palk = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tootunnid", DbType="Decimal(38,2)")]
		public System.Nullable<decimal> Tootunnid
		{
			get
			{
				return this._Tootunnid;
			}
			set
			{
				if ((this._Tootunnid != value))
				{
					this._Tootunnid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedSalary", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> CalculatedSalary
		{
			get
			{
				return this._CalculatedSalary;
			}
			set
			{
				if ((this._CalculatedSalary != value))
				{
					this._CalculatedSalary = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
